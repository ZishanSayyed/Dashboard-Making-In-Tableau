<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10400.20.0315.1409                               -->
<workbook original-version='10.3' source-build='10.4.26 (10400.20.0315.1409)' source-platform='win' version='10.4' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='10.4'>
      <aliases enabled='yes' />
      <column caption='Multipule Dim view' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Category&quot;'>
        <calculation class='tableau' formula='&quot;Category&quot;' />
        <members>
          <member value='&quot;Category&quot;' />
          <member value='&quot;Region&quot;' />
          <member value='&quot;Sub-Category&quot;' />
        </members>
      </column>
      <column caption='Top N cust' datatype='integer' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='10'>
        <calculation class='tableau' formula='10' />
      </column>
      <column caption='Sales/Profit View' datatype='string' datatype-customized='true' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;Profit&quot;'>
        <calculation class='tableau' formula='&quot;Profit&quot;' />
        <members>
          <member value='&quot;Sales&quot;' />
          <member value='&quot;Profit&quot;' />
        </members>
      </column>
      <column caption='growth rate' datatype='real' default-format='p0%' name='[Parameter 4]' param-domain-type='range' role='measure' type='quantitative' value='0.17999999999999999'>
        <calculation class='tableau' formula='0.17999999999999999' />
        <range granularity='0.01' max='1.0' min='0.0' />
      </column>
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Parameter 3]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Sales&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Profit&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
    </datasource>
    <datasource caption='Orders (Trader Stores)' inline='true' name='federated.0hshkkh14vjvje1dkc0jg01bsudh' version='10.4'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Trader Stores' name='excel-direct.0jvd0s409n5p5h0zj7uuq1h94t0a'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/ADMIN/OneDrive/Documents/Tableau/Tableau/Trader Stores.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0jvd0s409n5p5h0zj7uuq1h94t0a' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='Country' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State' ordinal='10' />
            <column datatype='integer' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='string' name='Product ID' ordinal='13' />
            <column datatype='string' name='Category' ordinal='14' />
            <column datatype='string' name='Sub-Category' ordinal='15' />
            <column datatype='string' name='Product Name' ordinal='16' />
            <column datatype='real' name='Sales' ordinal='17' />
            <column datatype='integer' name='Quantity' ordinal='18' />
            <column datatype='real' name='Discount' ordinal='19' />
            <column datatype='real' name='Profit' ordinal='20' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:U9995:no:A1:U9995:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='what if sales ' datatype='real' name='[Calculation_10414580304433154]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Sales])*(1+[Parameters].[Parameter 4])' />
      </column>
      <column caption='Index' datatype='integer' name='[Calculation_195906589593939968]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='INDEX()'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Multiple select criteria' datatype='string' name='[Calculation_195906589597192193]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='case[Parameters].[Parameter 1]&#13;&#10;when &quot;Category&quot; then [Category]&#13;&#10;when &quot;Region&quot; then [Region]&#13;&#10;when &quot;Sub-Category&quot; then [Sub-Category]&#13;&#10;END' />
      </column>
      <column caption='Sales/Profit' datatype='real' name='[Calculation_195906589604175875]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='case[Parameters].[Parameter 3]&#13;&#10;when &quot;Sales&quot; then [Sales]&#13;&#10;when &quot;Profit&quot; then [Profit]&#13;&#10;END' />
      </column>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
      <column datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column-instance column='[Calculation_195906589597192193]' derivation='None' name='[none:Calculation_195906589597192193:nk]' pivot='key' type='nominal' />
      <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
      <group caption='Action (City,State)' hidden='true' name='[Action (City,State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[City]' />
          <groupfilter function='level-members' level='[State]' />
        </groupfilter>
      </group>
      <group caption='Action (Multiple select criteria)' hidden='true' name='[Action (Multiple select criteria)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_195906589597192193]' />
        </groupfilter>
      </group>
      <group caption='Action (Multiple select criteria,City,State)' hidden='true' name='[Action (Multiple select criteria,City,State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_195906589597192193]' />
          <groupfilter function='level-members' level='[City]' />
          <groupfilter function='level-members' level='[State]' />
        </groupfilter>
      </group>
      <group caption='Action (Multiple select criteria,State)' hidden='true' name='[Action (Multiple select criteria,State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_195906589597192193]' />
          <groupfilter function='level-members' level='[State]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.626786' measure-ordering='alphabetic' measure-percentage='0.223214' parameter-percentage='0.15' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[yr:Order Date:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>2011</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>2014</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2013</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2012</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_195906589597192193:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Fasteners&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Accessories&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Central&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Furniture&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bookcases&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;West&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Paper&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Furnishings&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chairs&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Appliances&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tables&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Copiers&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Phones&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Storage&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Labels&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;South&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Technology&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Envelopes&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Art&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;East&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Office Supplies&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Supplies&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Machines&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Binders&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[City].[Name]' value='%null%' />
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Multipule Dim view' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Category&quot;'>
          <calculation class='tableau' formula='&quot;Category&quot;' />
        </column>
        <column caption='Sales/Profit View' datatype='string' datatype-customized='true' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;Profit&quot;'>
          <calculation class='tableau' formula='&quot;Profit&quot;' />
        </column>
        <column caption='growth rate' datatype='real' default-format='p0%' name='[Parameter 4]' param-domain-type='range' role='measure' type='quantitative' value='0.17999999999999999'>
          <calculation class='tableau' formula='0.17999999999999999' />
          <range granularity='0.01' max='1.0' min='0.0' />
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Multi select critera bar graph' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='multi select critera time ' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='geo states' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action4]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='geo cities' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Creating Multiple Dimension View'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Creating Multiple Dimension View</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Trader Stores)' name='federated.0hshkkh14vjvje1dkc0jg01bsudh' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Multipule Dim view' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Category&quot;'>
              <calculation class='tableau' formula='&quot;Category&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0hshkkh14vjvje1dkc0jg01bsudh'>
            <column caption='Multiple select criteria' datatype='string' name='[Calculation_195906589597192193]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='case[Parameters].[Parameter 1]&#13;&#10;when &quot;Category&quot; then [Category]&#13;&#10;when &quot;Region&quot; then [Region]&#13;&#10;when &quot;Sub-Category&quot; then [Sub-Category]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_195906589597192193]' derivation='None' name='[none:Calculation_195906589597192193:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='computed' column='[federated.0hshkkh14vjvje1dkc0jg01bsudh].[none:Calculation_195906589597192193:nk]' direction='DESC' using='[federated.0hshkkh14vjvje1dkc0jg01bsudh].[sum:Sales:qk]' />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0hshkkh14vjvje1dkc0jg01bsudh].[none:Calculation_195906589597192193:nk]</rows>
        <cols>[federated.0hshkkh14vjvje1dkc0jg01bsudh].[sum:Sales:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Creating Multiple Measures View'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Creating Multiple Measures View</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Trader Stores)' name='federated.0hshkkh14vjvje1dkc0jg01bsudh' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Sales/Profit View' datatype='string' datatype-customized='true' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;Profit&quot;'>
              <calculation class='tableau' formula='&quot;Profit&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0hshkkh14vjvje1dkc0jg01bsudh'>
            <column caption='Sales/Profit' datatype='real' name='[Calculation_195906589604175875]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='case[Parameters].[Parameter 3]&#13;&#10;when &quot;Sales&quot; then [Sales]&#13;&#10;when &quot;Profit&quot; then [Profit]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_195906589604175875]' derivation='Sum' name='[sum:Calculation_195906589604175875:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='computed' column='[federated.0hshkkh14vjvje1dkc0jg01bsudh].[none:Category:nk]' direction='DESC' using='[federated.0hshkkh14vjvje1dkc0jg01bsudh].[sum:Calculation_195906589604175875:qk]' />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0hshkkh14vjvje1dkc0jg01bsudh].[none:Category:nk]</rows>
        <cols>[federated.0hshkkh14vjvje1dkc0jg01bsudh].[sum:Calculation_195906589604175875:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Multi select critera bar graph'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>[Parameters].[Parameter 1]</run>
            <run>&gt;/&lt;</run>
            <run>[Parameters].[Parameter 3]</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Trader Stores)' name='federated.0hshkkh14vjvje1dkc0jg01bsudh' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Multipule Dim view' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Category&quot;'>
              <calculation class='tableau' formula='&quot;Category&quot;' />
            </column>
            <column caption='Sales/Profit View' datatype='string' datatype-customized='true' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;Profit&quot;'>
              <calculation class='tableau' formula='&quot;Profit&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0hshkkh14vjvje1dkc0jg01bsudh'>
            <column caption='Multiple select criteria' datatype='string' name='[Calculation_195906589597192193]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='case[Parameters].[Parameter 1]&#13;&#10;when &quot;Category&quot; then [Category]&#13;&#10;when &quot;Region&quot; then [Region]&#13;&#10;when &quot;Sub-Category&quot; then [Sub-Category]&#13;&#10;END' />
            </column>
            <column caption='Sales/Profit' datatype='real' name='[Calculation_195906589604175875]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='case[Parameters].[Parameter 3]&#13;&#10;when &quot;Sales&quot; then [Sales]&#13;&#10;when &quot;Profit&quot; then [Profit]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_195906589597192193]' derivation='None' name='[none:Calculation_195906589597192193:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_195906589604175875]' derivation='Sum' name='[sum:Calculation_195906589604175875:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0hshkkh14vjvje1dkc0jg01bsudh].[Action (City,State)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[City]' />
              <groupfilter function='level-members' level='[State]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0hshkkh14vjvje1dkc0jg01bsudh].[Action (Multiple select criteria,City,State)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_195906589597192193]' />
              <groupfilter function='level-members' level='[City]' />
              <groupfilter function='level-members' level='[State]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0hshkkh14vjvje1dkc0jg01bsudh].[Action (Multiple select criteria,State)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_195906589597192193]' />
              <groupfilter function='level-members' level='[State]' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[federated.0hshkkh14vjvje1dkc0jg01bsudh].[none:Calculation_195906589597192193:nk]' direction='DESC' using='[federated.0hshkkh14vjvje1dkc0jg01bsudh].[sum:Calculation_195906589604175875:qk]' />
          <slices>
            <column>[federated.0hshkkh14vjvje1dkc0jg01bsudh].[Action (City,State)]</column>
            <column>[federated.0hshkkh14vjvje1dkc0jg01bsudh].[Action (Multiple select criteria,City,State)]</column>
            <column>[federated.0hshkkh14vjvje1dkc0jg01bsudh].[Action (Multiple select criteria,State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0hshkkh14vjvje1dkc0jg01bsudh].[none:Calculation_195906589597192193:nk]</rows>
        <cols>[federated.0hshkkh14vjvje1dkc0jg01bsudh].[sum:Calculation_195906589604175875:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 9'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Trader Stores)' name='federated.0hshkkh14vjvje1dkc0jg01bsudh' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top N cust' datatype='integer' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='10'>
              <calculation class='tableau' formula='10' />
            </column>
            <column caption='Sales/Profit View' datatype='string' datatype-customized='true' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;Profit&quot;'>
              <calculation class='tableau' formula='&quot;Profit&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0hshkkh14vjvje1dkc0jg01bsudh'>
            <column caption='Index' datatype='integer' name='[Calculation_195906589593939968]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='INDEX()'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Sales/Profit' datatype='real' name='[Calculation_195906589604175875]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='case[Parameters].[Parameter 3]&#13;&#10;when &quot;Sales&quot; then [Sales]&#13;&#10;when &quot;Profit&quot; then [Profit]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_195906589604175875]' derivation='Sum' name='[sum:Calculation_195906589604175875:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_195906589593939968]' derivation='User' name='[usr:Calculation_195906589593939968:ok]' pivot='key' type='ordinal'>
              <table-calc ordering-type='Columns' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0hshkkh14vjvje1dkc0jg01bsudh].[none:City:nk]'>
            <groupfilter count='[Parameters].[Parameter 2]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([Category])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:City:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='computed' column='[federated.0hshkkh14vjvje1dkc0jg01bsudh].[none:City:nk]' direction='DESC' using='[federated.0hshkkh14vjvje1dkc0jg01bsudh].[sum:Calculation_195906589604175875:qk]' />
          <slices>
            <column>[federated.0hshkkh14vjvje1dkc0jg01bsudh].[none:City:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0hshkkh14vjvje1dkc0jg01bsudh].[usr:Calculation_195906589593939968:ok] / [federated.0hshkkh14vjvje1dkc0jg01bsudh].[none:City:nk])</rows>
        <cols>[federated.0hshkkh14vjvje1dkc0jg01bsudh].[sum:Calculation_195906589604175875:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='geo cities'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>[Parameters].[Parameter 1]</run>
            <run>&gt;/&lt;</run>
            <run>[Parameters].[Parameter 3]</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Trader Stores)' name='federated.0hshkkh14vjvje1dkc0jg01bsudh' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Multipule Dim view' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Category&quot;'>
              <calculation class='tableau' formula='&quot;Category&quot;' />
            </column>
            <column caption='Sales/Profit View' datatype='string' datatype-customized='true' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;Profit&quot;'>
              <calculation class='tableau' formula='&quot;Profit&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0hshkkh14vjvje1dkc0jg01bsudh'>
            <column caption='Multiple select criteria' datatype='string' name='[Calculation_195906589597192193]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='case[Parameters].[Parameter 1]&#13;&#10;when &quot;Category&quot; then [Category]&#13;&#10;when &quot;Region&quot; then [Region]&#13;&#10;when &quot;Sub-Category&quot; then [Sub-Category]&#13;&#10;END' />
            </column>
            <column caption='Sales/Profit' datatype='real' name='[Calculation_195906589604175875]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='case[Parameters].[Parameter 3]&#13;&#10;when &quot;Sales&quot; then [Sales]&#13;&#10;when &quot;Profit&quot; then [Profit]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_195906589597192193]' derivation='None' name='[none:Calculation_195906589597192193:nk]' pivot='key' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_195906589604175875]' derivation='Sum' name='[sum:Calculation_195906589604175875:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0hshkkh14vjvje1dkc0jg01bsudh].[Action (Multiple select criteria)]'>
            <groupfilter function='level-members' level='[Calculation_195906589597192193]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0hshkkh14vjvje1dkc0jg01bsudh].[Action (Multiple select criteria,State)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_195906589597192193]' />
              <groupfilter function='level-members' level='[State]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0hshkkh14vjvje1dkc0jg01bsudh].[Action (Multiple select criteria)]</column>
            <column>[federated.0hshkkh14vjvje1dkc0jg01bsudh].[Action (Multiple select criteria,State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0hshkkh14vjvje1dkc0jg01bsudh].[sum:Calculation_195906589604175875:qk]' />
              <text column='[federated.0hshkkh14vjvje1dkc0jg01bsudh].[none:Calculation_195906589597192193:nk]' />
              <lod column='[federated.0hshkkh14vjvje1dkc0jg01bsudh].[none:State:nk]' />
              <lod column='[federated.0hshkkh14vjvje1dkc0jg01bsudh].[none:City:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0hshkkh14vjvje1dkc0jg01bsudh].[Latitude (generated)]</rows>
        <cols>[federated.0hshkkh14vjvje1dkc0jg01bsudh].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='geo states'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>[Parameters].[Parameter 1]</run>
            <run>&gt;/&lt;</run>
            <run>[Parameters].[Parameter 3]</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Trader Stores)' name='federated.0hshkkh14vjvje1dkc0jg01bsudh' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Multipule Dim view' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Category&quot;'>
              <calculation class='tableau' formula='&quot;Category&quot;' />
            </column>
            <column caption='Sales/Profit View' datatype='string' datatype-customized='true' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;Profit&quot;'>
              <calculation class='tableau' formula='&quot;Profit&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0hshkkh14vjvje1dkc0jg01bsudh'>
            <column caption='Multiple select criteria' datatype='string' name='[Calculation_195906589597192193]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='case[Parameters].[Parameter 1]&#13;&#10;when &quot;Category&quot; then [Category]&#13;&#10;when &quot;Region&quot; then [Region]&#13;&#10;when &quot;Sub-Category&quot; then [Sub-Category]&#13;&#10;END' />
            </column>
            <column caption='Sales/Profit' datatype='real' name='[Calculation_195906589604175875]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='case[Parameters].[Parameter 3]&#13;&#10;when &quot;Sales&quot; then [Sales]&#13;&#10;when &quot;Profit&quot; then [Profit]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_195906589597192193]' derivation='None' name='[none:Calculation_195906589597192193:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_195906589604175875]' derivation='Sum' name='[sum:Calculation_195906589604175875:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0hshkkh14vjvje1dkc0jg01bsudh].[Action (City,State)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[City]' />
              <groupfilter function='level-members' level='[State]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0hshkkh14vjvje1dkc0jg01bsudh].[Action (Multiple select criteria)]'>
            <groupfilter function='level-members' level='[Calculation_195906589597192193]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0hshkkh14vjvje1dkc0jg01bsudh].[Action (Multiple select criteria,City,State)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_195906589597192193]' />
              <groupfilter function='level-members' level='[City]' />
              <groupfilter function='level-members' level='[State]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0hshkkh14vjvje1dkc0jg01bsudh].[Action (City,State)]</column>
            <column>[federated.0hshkkh14vjvje1dkc0jg01bsudh].[Action (Multiple select criteria,City,State)]</column>
            <column>[federated.0hshkkh14vjvje1dkc0jg01bsudh].[Action (Multiple select criteria)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0hshkkh14vjvje1dkc0jg01bsudh].[Longitude (generated)]' field-type='quantitative' max='-6428266.0630589938' min='-13812280.355978807' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0hshkkh14vjvje1dkc0jg01bsudh].[Latitude (generated)]' field-type='quantitative' max='6677077.213837821' min='3068348.3264440349' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.0hshkkh14vjvje1dkc0jg01bsudh].[sum:Calculation_195906589604175875:qk]' />
              <text column='[federated.0hshkkh14vjvje1dkc0jg01bsudh].[none:State:nk]' />
              <text column='[federated.0hshkkh14vjvje1dkc0jg01bsudh].[none:Calculation_195906589597192193:nk]' />
              <geometry column='[federated.0hshkkh14vjvje1dkc0jg01bsudh].[Geometry (generated)]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>&#10;&lt;</run>
                <run>[federated.0hshkkh14vjvje1dkc0jg01bsudh].[none:Calculation_195906589597192193:nk]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0hshkkh14vjvje1dkc0jg01bsudh].[Latitude (generated)]</rows>
        <cols>[federated.0hshkkh14vjvje1dkc0jg01bsudh].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='multi select critera time '>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>[Parameters].[Parameter 1]</run>
            <run>&gt;/&lt;</run>
            <run>[Parameters].[Parameter 3]</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Trader Stores)' name='federated.0hshkkh14vjvje1dkc0jg01bsudh' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Multipule Dim view' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Category&quot;'>
              <calculation class='tableau' formula='&quot;Category&quot;' />
            </column>
            <column caption='Sales/Profit View' datatype='string' datatype-customized='true' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;Profit&quot;'>
              <calculation class='tableau' formula='&quot;Profit&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0hshkkh14vjvje1dkc0jg01bsudh'>
            <column caption='Multiple select criteria' datatype='string' name='[Calculation_195906589597192193]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='case[Parameters].[Parameter 1]&#13;&#10;when &quot;Category&quot; then [Category]&#13;&#10;when &quot;Region&quot; then [Region]&#13;&#10;when &quot;Sub-Category&quot; then [Sub-Category]&#13;&#10;END' />
            </column>
            <column caption='Sales/Profit' datatype='real' name='[Calculation_195906589604175875]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='case[Parameters].[Parameter 3]&#13;&#10;when &quot;Sales&quot; then [Sales]&#13;&#10;when &quot;Profit&quot; then [Profit]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Order Date]' derivation='Month' name='[mn:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_195906589597192193]' derivation='None' name='[none:Calculation_195906589597192193:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_195906589604175875]' derivation='Sum' name='[sum:Calculation_195906589604175875:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0hshkkh14vjvje1dkc0jg01bsudh].[Action (City,State)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[City]' />
              <groupfilter function='level-members' level='[State]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0hshkkh14vjvje1dkc0jg01bsudh].[Action (Multiple select criteria)]'>
            <groupfilter function='level-members' level='[Calculation_195906589597192193]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0hshkkh14vjvje1dkc0jg01bsudh].[Action (Multiple select criteria,City,State)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_195906589597192193]' />
              <groupfilter function='level-members' level='[City]' />
              <groupfilter function='level-members' level='[State]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0hshkkh14vjvje1dkc0jg01bsudh].[Action (Multiple select criteria,State)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_195906589597192193]' />
              <groupfilter function='level-members' level='[State]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0hshkkh14vjvje1dkc0jg01bsudh].[Action (City,State)]</column>
            <column>[federated.0hshkkh14vjvje1dkc0jg01bsudh].[Action (Multiple select criteria,City,State)]</column>
            <column>[federated.0hshkkh14vjvje1dkc0jg01bsudh].[Action (Multiple select criteria)]</column>
            <column>[federated.0hshkkh14vjvje1dkc0jg01bsudh].[Action (Multiple select criteria,State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0hshkkh14vjvje1dkc0jg01bsudh].[none:Calculation_195906589597192193:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0hshkkh14vjvje1dkc0jg01bsudh].[sum:Calculation_195906589604175875:qk]</rows>
        <cols>[federated.0hshkkh14vjvje1dkc0jg01bsudh].[mn:Order Date:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='top N prameter'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Trader Stores)' name='federated.0hshkkh14vjvje1dkc0jg01bsudh' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top N cust' datatype='integer' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='10'>
              <calculation class='tableau' formula='10' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0hshkkh14vjvje1dkc0jg01bsudh'>
            <column caption='Index' datatype='integer' name='[Calculation_195906589593939968]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='INDEX()'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_195906589593939968]' derivation='User' name='[usr:Calculation_195906589593939968:ok]' pivot='key' type='ordinal'>
              <table-calc ordering-type='Columns' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0hshkkh14vjvje1dkc0jg01bsudh].[none:Customer Name:nk]'>
            <groupfilter count='[Parameters].[Parameter 2]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([Customer Name])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Customer Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='computed' column='[federated.0hshkkh14vjvje1dkc0jg01bsudh].[none:Customer Name:nk]' direction='DESC' using='[federated.0hshkkh14vjvje1dkc0jg01bsudh].[sum:Sales:qk]' />
          <slices>
            <column>[federated.0hshkkh14vjvje1dkc0jg01bsudh].[none:Customer Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0hshkkh14vjvje1dkc0jg01bsudh].[usr:Calculation_195906589593939968:ok] / [federated.0hshkkh14vjvje1dkc0jg01bsudh].[none:Customer Name:nk])</rows>
        <cols>[federated.0hshkkh14vjvje1dkc0jg01bsudh].[sum:Sales:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='what if analysis'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Trader Stores)' name='federated.0hshkkh14vjvje1dkc0jg01bsudh' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='growth rate' datatype='real' default-format='p0%' name='[Parameter 4]' param-domain-type='range' role='measure' type='quantitative' value='0.17999999999999999'>
              <calculation class='tableau' formula='0.17999999999999999' />
              <range granularity='0.01' max='1.0' min='0.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0hshkkh14vjvje1dkc0jg01bsudh'>
            <column caption='what if sales ' datatype='real' name='[Calculation_10414580304433154]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Sales])*(1+[Parameters].[Parameter 4])' />
            </column>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month-Trunc' name='[tmn:Order Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_10414580304433154]' derivation='User' name='[usr:Calculation_10414580304433154:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0hshkkh14vjvje1dkc0jg01bsudh].[yr:Order Date:ok]'>
            <groupfilter function='member' level='[yr:Order Date:ok]' member='2014' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0hshkkh14vjvje1dkc0jg01bsudh].[yr:Order Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0hshkkh14vjvje1dkc0jg01bsudh].[usr:Calculation_10414580304433154:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='0' field='[federated.0hshkkh14vjvje1dkc0jg01bsudh].[usr:Calculation_10414580304433154:qk]' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0hshkkh14vjvje1dkc0jg01bsudh].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0hshkkh14vjvje1dkc0jg01bsudh].[sum:Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0hshkkh14vjvje1dkc0jg01bsudh].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0hshkkh14vjvje1dkc0jg01bsudh].[usr:Calculation_10414580304433154:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0hshkkh14vjvje1dkc0jg01bsudh].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0hshkkh14vjvje1dkc0jg01bsudh].[sum:Sales:qk] + [federated.0hshkkh14vjvje1dkc0jg01bsudh].[usr:Calculation_10414580304433154:qk])</rows>
        <cols>[federated.0hshkkh14vjvje1dkc0jg01bsudh].[tmn:Order Date:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='16' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='12' param='horz' type='layout-flow' w='99629' x='0' y='0'>
              <zone h='100000' id='5' param='horz' type='layout-flow' w='99629' x='0' y='0'>
                <zone h='100000' id='3' type='layout-basic' w='99629' x='0' y='0'>
                  <zone h='50000' id='1' name='Multi select critera bar graph' w='49815' x='0' y='0'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                      <format attr='margin-top' value='0' />
                      <format attr='margin-left' value='0' />
                    </zone-style>
                  </zone>
                  <zone h='50000' id='8' name='multi select critera time ' w='49814' x='49815' y='0'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                      <format attr='margin-top' value='0' />
                    </zone-style>
                  </zone>
                  <zone h='50000' id='10' name='geo states' w='49815' x='0' y='50000'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                      <format attr='margin-bottom' value='0' />
                      <format attr='margin-left' value='0' />
                    </zone-style>
                  </zone>
                  <zone h='50000' id='14' name='geo cities' w='49814' x='49815' y='50000'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                      <format attr='margin-bottom' value='0' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
            <format attr='margin-top' value='8' />
            <format attr='margin-right' value='8' />
            <format attr='margin-bottom' value='8' />
            <format attr='margin-left' value='8' />
          </zone-style>
        </zone>
        <zone h='15482' id='9' name='multi select critera time ' pane-specification-id='0' param='[federated.0hshkkh14vjvje1dkc0jg01bsudh].[none:Calculation_195906589597192193:nk]' type='color' w='12809' x='83715' y='948' />
        <zone h='6951' id='7' mode='compact' param='[Parameters].[Parameter 3]' type='paramctrl' w='14639' x='84629' y='90837' />
        <zone h='12006' id='13' name='geo states' pane-specification-id='0' param='[federated.0hshkkh14vjvje1dkc0jg01bsudh].[sum:Calculation_195906589604175875:qk]' type='color' w='12809' x='35956' y='90363' />
        <zone h='6951' id='17' mode='compact' param='[Parameters].[Parameter 1]' type='paramctrl' w='14639' x='85087' y='82464' />
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='top N prameter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0hshkkh14vjvje1dkc0jg01bsudh].[none:Customer Name:nk]</field>
            <field>[federated.0hshkkh14vjvje1dkc0jg01bsudh].[usr:Calculation_195906589593939968:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Creating Multiple Dimension View'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 3]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0hshkkh14vjvje1dkc0jg01bsudh].[none:Calculation_195906589597192193:nk]</field>
            <field>[federated.0hshkkh14vjvje1dkc0jg01bsudh].[none:Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Creating Multiple Measures View'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[Parameter 3]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0hshkkh14vjvje1dkc0jg01bsudh].[none:Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Multi select critera bar graph'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 3]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0hshkkh14vjvje1dkc0jg01bsudh].[none:Calculation_195906589597192193:nk]</field>
            <field>[federated.0hshkkh14vjvje1dkc0jg01bsudh].[none:Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='multi select critera time '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 3]' type='parameter' />
            <card pane-specification-id='0' param='[federated.0hshkkh14vjvje1dkc0jg01bsudh].[none:Calculation_195906589597192193:nk]' type='color' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Parameter 1]</field>
            <field>[federated.0hshkkh14vjvje1dkc0jg01bsudh].[none:Calculation_195906589597192193:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='geo states'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0hshkkh14vjvje1dkc0jg01bsudh].[sum:Calculation_195906589604175875:qk]' type='color' />
            <card mode='compact' param='[Parameters].[Parameter 3]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0hshkkh14vjvje1dkc0jg01bsudh].[none:Calculation_195906589597192193:nk]</field>
            <field>[federated.0hshkkh14vjvje1dkc0jg01bsudh].[none:City:nk]</field>
            <field>[federated.0hshkkh14vjvje1dkc0jg01bsudh].[none:State:nk]</field>
            <field>[federated.0hshkkh14vjvje1dkc0jg01bsudh].[sum:Calculation_195906589604175875:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='geo cities'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 3]' type='parameter' />
            <card pane-specification-id='0' param='[federated.0hshkkh14vjvje1dkc0jg01bsudh].[sum:Calculation_195906589604175875:qk]' type='color' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Parameter 3]</field>
            <field>[federated.0hshkkh14vjvje1dkc0jg01bsudh].[none:Calculation_195906589597192193:nk]</field>
            <field>[federated.0hshkkh14vjvje1dkc0jg01bsudh].[none:City:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='what if analysis'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0hshkkh14vjvje1dkc0jg01bsudh].[yr:Order Date:ok]' type='filter' />
            <card mode='slider' param='[Parameters].[Parameter 4]' type='parameter' />
            <card pane-specification-id='1' param='[federated.0hshkkh14vjvje1dkc0jg01bsudh].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0hshkkh14vjvje1dkc0jg01bsudh].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='Sheet 9'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 3]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0hshkkh14vjvje1dkc0jg01bsudh].[none:City:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Multi select critera bar graph'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='geo cities'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='geo states'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='multi select critera time '>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0hshkkh14vjvje1dkc0jg01bsudh].[none:Calculation_195906589597192193:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='7' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='139' name='Creating Multiple Dimension View' width='192'>
      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
      UakrAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='139' name='Creating Multiple Measures View' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='139' name='Multi select critera bar graph' width='192'>
      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
      zcDPpBYuWAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 9' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='geo cities' width='192'>
      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
      8P8BFLLd0R3j07sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='geo states' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='multi select critera time ' width='192'>
      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
      Fz0dWzOYq0oAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='top N prameter' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='what if analysis' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
